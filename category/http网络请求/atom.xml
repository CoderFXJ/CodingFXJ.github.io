<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://CodingFXJ.github.io</id>
    <title>CodingFXJ&#39;Blog • Posts by &#34;http网络请求&#34; category</title>
    <link href="https://CodingFXJ.github.io" />
    <updated>2021-07-04T07:12:59.000Z</updated>
    <category term="CSS" />
    <category term="AJAX" />
    <category term="jQuery" />
    <category term="css" />
    <category term="JS" />
    <category term="flex布局" />
    <category term="Git" />
    <category term="HEXO" />
    <category term="Github" />
    <category term="Note" />
    <category term="Blog" />
    <category term="ES6" />
    <category term="数组" />
    <category term="时间" />
    <category term="this指向" />
    <category term="闭包" />
    <category term="懒加载" />
    <category term="高阶函数" />
    <category term="LeetCode" />
    <category term="Vue" />
    <category term="Vuex" />
    <category term="NPM" />
    <category term="手写高阶函数" />
    <category term="算法" />
    <category term="扁平化" />
    <category term="复杂度" />
    <category term="HTTP网络请求" />
    <category term="JAVA" />
    <category term="设计模式" />
    <category term="Webpack" />
    <category term="Typora" />
    <category term="Markdown" />
    <entry>
        <id>https://codingfxj.github.io/p/9df07266.html</id>
        <title>浏览器网页请求过程</title>
        <link rel="alternate" href="https://codingfxj.github.io/p/9df07266.html"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;完整的HTTP请求过程&#34;&gt;&lt;a href=&#34;#完整的HTTP请求过程&#34; class=&#34;headerlink&#34; title=&#34;完整的HTTP请求过程&#34;&gt;&lt;/a&gt;完整的HTTP请求过程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;域名解析 ==&amp;gt;  与服务器建立连接 ==&amp;gt; 发起HTTP请求  ==&amp;gt; 服务器响应HTTP请求，浏览器得到html代码  ==&amp;gt; 浏览器解析html代码，并请求html代码中的资源（如js、css、图片） ==&amp;gt; 浏览器对页面进行渲染呈现给用户&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一、域名解析&#34;&gt;&lt;a href=&#34;#一、域名解析&#34; class=&#34;headerlink&#34; title=&#34;一、域名解析&#34;&gt;&lt;/a&gt;一、域名解析&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Chrome浏览器 会首先搜索浏览器自身的DNS缓存，有且没有过期则解析到此结束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果浏览器自身的缓存里面没有找到对应的条目，会搜索操作系统自身的DNS缓存，有且没有过期则停止搜索解析到此结束&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows系统：ipconfig /displaydns命令查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;如果在Windows系统的DNS缓存也没有找到，则读取hosts文件&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;hosts位于 ‪C:\Windows\System32\drivers\etc\hosts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;hosts文件中也没有找到对应的条目，浏览器就会发起一个DNS的系统调用，就会向本地配置的首选DNS服务器发起域名解析请求&lt;/p&gt;
&lt;p&gt;并返回给Windows系统内核，内核又把结果返回给浏览器。（这是递归的请求，也就是运营商的DNS服务器必须得提供并返回该域名的IP地址）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;经过以上的4个步骤，还没有解析成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt; 注:一般不会进行以下几步&lt;/p&gt;
&lt;p&gt;操作系统就会查找NetBIOS name Cache == &amp;gt; WINS 服务器 ==&amp;gt;客户端就要进行广播查找 ==&amp;gt; 客户端就读取LMHOSTS文件    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果还没有解析成功，那么就宣告这次解析失败，那就无法跟目标计算机进行通信。只要其中有一步可以解析成功，那就可以成功和目标计算机进行通信。&lt;/p&gt;
&lt;h3 id=&#34;二、与服务器建立连接&#34;&gt;&lt;a href=&#34;#二、与服务器建立连接&#34; class=&#34;headerlink&#34; title=&#34;二、与服务器建立连接&#34;&gt;&lt;/a&gt;二、与服务器建立连接&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;TCP连接的建立&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;客户端的请求到达服务器，首先就是三次握手建立TCP连接&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三次握手的目的：试探一下对方是否遵循TCP/IP协议，为了在不可靠的信道上建立起可靠的连接&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么要进行第三次握手&lt;/strong&gt;：为了防止服务器端开启一些无用的连接，增加服务器开销；&lt;/p&gt;
&lt;p&gt;以及防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704153259.png&#34;/&gt;&lt;/p&gt;
&lt;h3 id=&#34;三、发起HTTP请求&#34;&gt;&lt;a href=&#34;#三、发起HTTP请求&#34; class=&#34;headerlink&#34; title=&#34;三、发起HTTP请求&#34;&gt;&lt;/a&gt;三、发起HTTP请求&lt;/h3&gt;&lt;p&gt;http协议：计算机通过网络进行通信的规则，是一个基于请求与响应，无状态的，应用层的协议，常基于TCP/IP协议传输数据。&lt;/p&gt;
&lt;h4 id=&#34;请求报文结构&#34;&gt;&lt;a href=&#34;#请求报文结构&#34; class=&#34;headerlink&#34; title=&#34;请求报文结构&#34;&gt;&lt;/a&gt;请求报文结构&lt;/h4&gt;&lt;p&gt;请求报文包括四个部分：请求行，请求头，空行，请求体。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704155902.png&#34;/&gt;&lt;/p&gt;
&lt;h3 id=&#34;四、服务器端响应HTTP请求，浏览器得到HTML代码&#34;&gt;&lt;a href=&#34;#四、服务器端响应HTTP请求，浏览器得到HTML代码&#34; class=&#34;headerlink&#34; title=&#34;四、服务器端响应HTTP请求，浏览器得到HTML代码&#34;&gt;&lt;/a&gt;四、服务器端响应HTTP请求，浏览器得到HTML代码&lt;/h3&gt;&lt;p&gt;HTTP的响应报文也由四部分组成：响应行、响应头、空行、响应体&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704160248.png&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/lyn_00/article/details/84953763&#34;&gt;报文结构参考&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;五、浏览器解析HTML代码，并请求HTML代码中的资源&#34;&gt;&lt;a href=&#34;#五、浏览器解析HTML代码，并请求HTML代码中的资源&#34; class=&#34;headerlink&#34; title=&#34;五、浏览器解析HTML代码，并请求HTML代码中的资源&#34;&gt;&lt;/a&gt;五、浏览器解析HTML代码，并请求HTML代码中的资源&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;解析html结构，形成Dom树&lt;/li&gt;
&lt;li&gt;解析CSS，生成cssom&lt;/li&gt;
&lt;li&gt;将CSS和Dom合并形成render树&lt;/li&gt;
&lt;li&gt;计算layout布局&lt;/li&gt;
&lt;li&gt;将布局渲染到屏幕上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704162443.png&#34;/&gt;&lt;/p&gt;
&lt;h3 id=&#34;六、浏览器对页面进行渲染呈现给用户，关闭连接&#34;&gt;&lt;a href=&#34;#六、浏览器对页面进行渲染呈现给用户，关闭连接&#34; class=&#34;headerlink&#34; title=&#34;六、浏览器对页面进行渲染呈现给用户，关闭连接&#34;&gt;&lt;/a&gt;六、浏览器对页面进行渲染呈现给用户，关闭连接&lt;/h3&gt;&lt;h4 id=&#34;四次挥手&#34;&gt;&lt;a href=&#34;#四次挥手&#34; class=&#34;headerlink&#34; title=&#34;四次挥手&#34;&gt;&lt;/a&gt;四次挥手&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704162253.png&#34;/&gt;&lt;/p&gt;
&lt;p&gt;问题一：&lt;/p&gt;
&lt;p&gt;为什么连接的时候是三次握手，关闭的时候却是四次握手？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了保障数据发送完再断开连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问题二：&lt;/p&gt;
&lt;p&gt;为什么要等待一段时间在关闭连接？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为客户端发送完ack包后中途可能丢失，此时服务端未收到ack包会重发fin包，客户端在发送ack包刷新等待时间，&lt;/p&gt;
&lt;p&gt;确保服务端关闭再 关闭客户端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1kV411j7hA?from=search&amp;amp;seid=11094337157520488587&#34;&gt;参考视频1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1BV411a72M?from=search&amp;amp;seid=4937986881420888725&#34;&gt;参考视频2&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="HTTP网络请求" />
        <updated>2021-07-04T07:12:59.000Z</updated>
    </entry>
</feed>
