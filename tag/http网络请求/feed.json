{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodingFXJ'Blog • All posts by \"http网络请求\" tag",
    "description": "",
    "home_page_url": "https://CodingFXJ.github.io",
    "items": [
        {
            "id": "https://codingfxj.github.io/2021/07/04/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BD%91%E9%A1%B5%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B/",
            "url": "https://codingfxj.github.io/2021/07/04/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BD%91%E9%A1%B5%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B/",
            "title": "浏览器网页请求过程",
            "date_published": "2021-07-04T07:12:59.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"完整的HTTP请求过程\"><a href=\"#完整的HTTP请求过程\" class=\"headerlink\" title=\"完整的HTTP请求过程\"></a>完整的HTTP请求过程</h2><blockquote>\n<p>域名解析 ==&gt;  与服务器建立连接 ==&gt; 发起HTTP请求  ==&gt; 服务器响应HTTP请求，浏览器得到html代码  ==&gt; 浏览器解析html代码，并请求html代码中的资源（如js、css、图片） ==&gt; 浏览器对页面进行渲染呈现给用户</p>\n</blockquote>\n<h3 id=\"一、域名解析\"><a href=\"#一、域名解析\" class=\"headerlink\" title=\"一、域名解析\"></a>一、域名解析</h3><ol>\n<li><p>Chrome浏览器 会首先搜索浏览器自身的DNS缓存，有且没有过期则解析到此结束。</p>\n</li>\n<li><p>如果浏览器自身的缓存里面没有找到对应的条目，会搜索操作系统自身的DNS缓存，有且没有过期则停止搜索解析到此结束</p>\n</li>\n</ol>\n<blockquote>\n<p>Windows系统：ipconfig /displaydns命令查看</p>\n</blockquote>\n<ol>\n<li>如果在Windows系统的DNS缓存也没有找到，则读取hosts文件</li>\n</ol>\n<blockquote>\n<p>hosts位于 ‪C:\\Windows\\System32\\drivers\\etc\\hosts</p>\n</blockquote>\n<ol>\n<li><p>hosts文件中也没有找到对应的条目，浏览器就会发起一个DNS的系统调用，就会向本地配置的首选DNS服务器发起域名解析请求</p>\n<p>并返回给Windows系统内核，内核又把结果返回给浏览器。（这是递归的请求，也就是运营商的DNS服务器必须得提供并返回该域名的IP地址）</p>\n</li>\n<li><p>经过以上的4个步骤，还没有解析成功</p>\n</li>\n</ol>\n<blockquote>\n<p> 注:一般不会进行以下几步</p>\n<p>操作系统就会查找NetBIOS name Cache == &gt; WINS 服务器 ==&gt;客户端就要进行广播查找 ==&gt; 客户端就读取LMHOSTS文件    </p>\n</blockquote>\n<p>如果还没有解析成功，那么就宣告这次解析失败，那就无法跟目标计算机进行通信。只要其中有一步可以解析成功，那就可以成功和目标计算机进行通信。</p>\n<h3 id=\"二、与服务器建立连接\"><a href=\"#二、与服务器建立连接\" class=\"headerlink\" title=\"二、与服务器建立连接\"></a>二、与服务器建立连接</h3><ol>\n<li>TCP连接的建立</li>\n</ol>\n<p>客户端的请求到达服务器，首先就是三次握手建立TCP连接</p>\n<blockquote>\n<p>三次握手的目的：试探一下对方是否遵循TCP/IP协议，为了在不可靠的信道上建立起可靠的连接</p>\n<p><strong>为什么要进行第三次握手</strong>：为了防止服务器端开启一些无用的连接，增加服务器开销；</p>\n<p>以及防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误。</p>\n</blockquote>\n<p><img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704153259.png\"/></p>\n<h3 id=\"三、发起HTTP请求\"><a href=\"#三、发起HTTP请求\" class=\"headerlink\" title=\"三、发起HTTP请求\"></a>三、发起HTTP请求</h3><p>http协议：计算机通过网络进行通信的规则，是一个基于请求与响应，无状态的，应用层的协议，常基于TCP/IP协议传输数据。</p>\n<h4 id=\"请求报文结构\"><a href=\"#请求报文结构\" class=\"headerlink\" title=\"请求报文结构\"></a>请求报文结构</h4><p>请求报文包括四个部分：请求行，请求头，空行，请求体。</p>\n<p><img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704155902.png\"/></p>\n<h3 id=\"四、服务器端响应HTTP请求，浏览器得到HTML代码\"><a href=\"#四、服务器端响应HTTP请求，浏览器得到HTML代码\" class=\"headerlink\" title=\"四、服务器端响应HTTP请求，浏览器得到HTML代码\"></a>四、服务器端响应HTTP请求，浏览器得到HTML代码</h3><p>HTTP的响应报文也由四部分组成：响应行、响应头、空行、响应体</p>\n<p><img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704160248.png\"/></p>\n<p><a href=\"https://blog.csdn.net/lyn_00/article/details/84953763\">报文结构参考</a></p>\n<h3 id=\"五、浏览器解析HTML代码，并请求HTML代码中的资源\"><a href=\"#五、浏览器解析HTML代码，并请求HTML代码中的资源\" class=\"headerlink\" title=\"五、浏览器解析HTML代码，并请求HTML代码中的资源\"></a>五、浏览器解析HTML代码，并请求HTML代码中的资源</h3><ol>\n<li>解析html结构，形成Dom树</li>\n<li>解析CSS，生成cssom</li>\n<li>将CSS和Dom合并形成render树</li>\n<li>计算layout布局</li>\n<li>将布局渲染到屏幕上</li>\n</ol>\n<p><img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704162443.png\"/></p>\n<h3 id=\"六、浏览器对页面进行渲染呈现给用户，关闭连接\"><a href=\"#六、浏览器对页面进行渲染呈现给用户，关闭连接\" class=\"headerlink\" title=\"六、浏览器对页面进行渲染呈现给用户，关闭连接\"></a>六、浏览器对页面进行渲染呈现给用户，关闭连接</h3><h4 id=\"四次挥手\"><a href=\"#四次挥手\" class=\"headerlink\" title=\"四次挥手\"></a>四次挥手</h4><p><img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704162253.png\"/></p>\n<p>问题一：</p>\n<p>为什么连接的时候是三次握手，关闭的时候却是四次握手？</p>\n<blockquote>\n<p>为了保障数据发送完再断开连接</p>\n</blockquote>\n<p>问题二：</p>\n<p>为什么要等待一段时间在关闭连接？</p>\n<blockquote>\n<p>因为客户端发送完ack包后中途可能丢失，此时服务端未收到ack包会重发fin包，客户端在发送ack包刷新等待时间，</p>\n<p>确保服务端关闭再 关闭客户端</p>\n</blockquote>\n<p><a href=\"https://www.bilibili.com/video/BV1kV411j7hA?from=search&amp;seid=11094337157520488587\">参考视频1</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1BV411a72M?from=search&amp;seid=4937986881420888725\">参考视频2</a></p>\n",
            "tags": [
                "HTTP网络请求"
            ]
        }
    ]
}